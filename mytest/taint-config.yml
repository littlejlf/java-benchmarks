sources:
  - { kind: call, method: "<test_thread: java.lang.String callApi()>", index: result }

sinks:
  - { method: "<test_thread: void Sink(java.lang.StringBuffer)>", index: 0 }
  - { method: "<test_thread: void Sink(java.lang.String)>", index: 0 }
transfers:
  - { method: "<org.apache.logging.log4j.message.ReusableMessageFactory: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>", from: 0, to: result, type: "org.apache.logging.log4j.message.ReusableSimpleMessage" }
  - { method: "<org.apache.logging.log4j.core.impl.ReusableLogEventFactory: org.apache.logging.log4j.core.LogEvent createEvent(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.util.List,java.lang.Throwable)>", from: 4, to: result, type: "org.apache.logging.log4j.core.impl.MutableLogEvent" }
  - { method: "<org.apache.logging.log4j.core.impl.MutableLogEvent: void formatTo(java.lang.StringBuilder)>", from: base, to: 0 }
  - { method: "<java.lang.StringBuilder: void <init>(java.lang.String)>", from: 0, to: base }
  - { method: "<java.lang.StringBuilder: java.lang.String substring(int,int)>", from: base, to: result }
  - { method: "<java.lang.StringBuilder: void getChars(int,int,char[],int)>", from: base, to: 2 }
  - { method: "<java.lang.String: java.lang.String substring(int)>", from: base, to: result }
  - { method: "<java.lang.String: void <init>(char[],int,int)>", from: 0, to: base }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>", from: 0, to: base, type: "java.lang.StringBuffer" }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>", from: 0, to: base, type: "java.lang.StringBuffer" }
  - { method: "<java.lang.StringBuffer: java.lang.String toString()>", from: base, to: result, type: "java.lang.String" }
  - { method: "<test_thread: java.lang.String transfer()>", from: 1, to: 0, type: "java.lang.String" }
